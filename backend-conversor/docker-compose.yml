version: "3.8"
services:
  app1:
    build: .
    container_name: app1
    command: npm start
    depends_on:
      - rabbitmq
    ports:
      - "4000:4000"
    volumes:
      - shared_data:/backend-conversor/temp
    restart: always

  app2:
    build: .
    container_name: app2
    command: npm start
    depends_on:
      - rabbitmq
    ports:
      - "4001:4000"
    volumes:
      - shared_data:/backend-conversor/temp
    restart: always

  worker1:
    build: .
    container_name: worker1
    command: node worker.js
    depends_on:
      - rabbitmq
    volumes:
      - shared_data:/backend-conversor/temp
    restart: always

  worker2:
    build: .
    container_name: worker2
    command: node worker.js
    depends_on:
      - rabbitmq
    volumes:
      - shared_data:/backend-conversor/temp
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    restart: always

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

volumes:
  shared_data:
